"""Criando trigger e funcao para entrada e saida do banco

Revision ID: bae6c6ce1958
Revises: 865fad7d3aac
Create Date: 2025-10-20 21:07:40.296719

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'bae6c6ce1958'
down_revision: Union[str, Sequence[str], None] = '865fad7d3aac'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("""
    CREATE OR REPLACE FUNCTION fn_controle_movimentacoes()
    RETURNS TRIGGER AS $$
    DECLARE
        tipoatu TEXT;
        novoEstoque INTEGER;
        valor INTEGER;
        customedio REAL;
        total_agr REAL;
    BEGIN
        tipoatu := LOWER(NEW.tipo::text);
        valor := NEW.quantidade;

        SELECT quantidade_disponivel, custo_medio
        INTO novoEstoque, customedio
        FROM estoque
        WHERE id_produtos = NEW.id_produtos;

        IF tipoatu = 'entrada' THEN
            total_agr := NEW.total;
            customedio := (novoEstoque * customedio + total_agr) / (novoEstoque + valor);
            novoEstoque := novoEstoque + valor;

            UPDATE estoque
            SET updated_at = NOW(),
                custo_medio = customedio,
                quantidade_disponivel = novoEstoque
            WHERE id_produtos = NEW.id_produtos;

        ELSIF tipoatu = 'saida' THEN
            novoEstoque := novoEstoque - valor;

            UPDATE estoque
            SET updated_at = NOW(),
                quantidade_disponivel = novoEstoque
            WHERE id_produtos = NEW.id_produtos;
        END IF;

        UPDATE estoque
        SET quantidade_disponivel = novoEstoque,
            updated_at = CURRENT_TIMESTAMP
        WHERE id_produtos = NEW.id_produtos;

        RETURN NULL;
    END;
    $$ LANGUAGE plpgsql;
    """)

    op.execute("""
    CREATE TRIGGER tr_controle
    AFTER INSERT ON movimentacoes_estoque
    FOR EACH ROW
    EXECUTE FUNCTION fn_controle_movimentacoes();
    """)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("DROP TRIGGER IF EXISTS tr_controle ON movimentacoes_estoque;")
    op.execute("DROP FUNCTION IF EXISTS fn_controle_movimentacoes();")
    # ### end Alembic commands ###
